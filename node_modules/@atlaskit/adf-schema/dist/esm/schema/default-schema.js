import { createSchema } from './create-schema';
import { mediaWithAltText } from './nodes';
export var getSchemaBasedOnStage = function (stage) {
    if (stage === void 0) { stage = 'final'; }
    var config = {
        nodes: [
            'doc',
            'paragraph',
            'text',
            'bulletList',
            'orderedList',
            'listItem',
            'heading',
            'blockquote',
            'codeBlock',
            'panel',
            'rule',
            'image',
            'mention',
            'media',
            'mediaGroup',
            'mediaSingle',
            'confluenceUnsupportedBlock',
            'confluenceUnsupportedInline',
            'confluenceJiraIssue',
            'expand',
            'nestedExpand',
            'extension',
            'inlineExtension',
            'bodiedExtension',
            'hardBreak',
            'emoji',
            'table',
            'tableCell',
            'tableHeader',
            'tableRow',
            'decisionList',
            'decisionItem',
            'taskList',
            'taskItem',
            'unknownBlock',
            'date',
            'status',
            'placeholder',
            'layoutSection',
            'layoutColumn',
            'inlineCard',
            'blockCard',
            'unsupportedBlock',
            'unsupportedInline',
        ],
        marks: [
            'link',
            'em',
            'strong',
            'strike',
            'subsup',
            'underline',
            'code',
            'textColor',
            'confluenceInlineComment',
            'breakout',
            'alignment',
            'indentation',
            'annotation',
        ],
    };
    if (stage === 'stage0') {
        config.customNodeSpecs = {
            media: mediaWithAltText,
        };
    }
    return createSchema(config);
};
export var defaultSchema = getSchemaBasedOnStage();
//# sourceMappingURL=default-schema.js.map