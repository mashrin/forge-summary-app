"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var table_1 = require("./table");
var rows_1 = require("./rows");
var SideEffectsHandler = /** @class */ (function () {
    function SideEffectsHandler(sideEffects) {
        this.table = new table_1.TableSideEffectHandler(sideEffects && sideEffects.table);
        this.rows = new rows_1.RowsSideEffectHandler(sideEffects && sideEffects.rows);
    }
    SideEffectsHandler.prototype.getTableMap = function (isDelete) {
        return this.table.getTableMap(isDelete);
    };
    SideEffectsHandler.prototype.map = function (mapping) {
        var sideEffects = {};
        var tableSideEffect = this.table.map(mapping);
        var rowsSideEffect = this.rows.map(mapping);
        if (tableSideEffect) {
            sideEffects.table = tableSideEffect;
        }
        if (rowsSideEffect) {
            sideEffects.rows = rowsSideEffect;
        }
        return sideEffects;
    };
    SideEffectsHandler.prototype.invert = function (originalDoc, isDelete, map) {
        var sideEffects = {};
        var tableSideEffect = this.table.invert(originalDoc);
        if (tableSideEffect) {
            sideEffects.table = tableSideEffect;
        }
        var rowsSideEffect = this.rows.invert(originalDoc, isDelete, map);
        if (rowsSideEffect) {
            sideEffects.rows = rowsSideEffect;
        }
        return sideEffects;
    };
    SideEffectsHandler.prototype.toJSON = function () {
        var tableSideEffectJson = this.table.toJSON();
        var rowsSideEffectJson = this.rows.toJSON();
        if (!tableSideEffectJson && !rowsSideEffectJson) {
            return;
        }
        var sideEffectsJSON = {};
        if (tableSideEffectJson) {
            sideEffectsJSON.table = tableSideEffectJson;
        }
        if (rowsSideEffectJson) {
            sideEffectsJSON.rows = rowsSideEffectJson;
        }
        return sideEffectsJSON;
    };
    SideEffectsHandler.fromJSON = function (schema, json) {
        var sideEffects = {};
        if (json.table) {
            sideEffects.table = table_1.TableSideEffectHandler.fromJSON(schema, json.table);
        }
        if (json.rows) {
            sideEffects.rows = rows_1.RowsSideEffectHandler.fromJSON(schema, json.rows);
        }
        return sideEffects;
    };
    return SideEffectsHandler;
}());
exports.SideEffectsHandler = SideEffectsHandler;
//# sourceMappingURL=side-effects.js.map