import { uuid } from './uuid';
export var isValidLayout = function (name) {
    return !!name && ['default', 'wide', 'full-width'].includes(name);
};
export var getExtensionAttrs = function (dom, allowLocalId, isInline) {
    if (isInline === void 0) { isInline = false; }
    var extensionType = dom.getAttribute('data-extension-type');
    var extensionKey = dom.getAttribute('data-extension-key');
    if (!extensionType || !extensionKey) {
        return false;
    }
    var attrs = {
        extensionType: extensionType,
        extensionKey: extensionKey,
        text: dom.getAttribute('data-text') || undefined,
        parameters: JSON.parse(dom.getAttribute('data-parameters') || '{}'),
    };
    if (!isInline) {
        var rawLayout = dom.getAttribute('data-layout');
        attrs.layout = isValidLayout(rawLayout) ? rawLayout : 'default';
    }
    if (allowLocalId) {
        attrs.localId = uuid.generate();
    }
    return attrs;
};
//# sourceMappingURL=extensions.js.map