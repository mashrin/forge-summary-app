import { uuid } from '../../utils/uuid';
import { getExtensionAttrs } from '../../utils/extensions';
const createBodiedExtensionNodeSpec = (allowLocalId = false) => {
    const nodeSpec = {
        inline: false,
        group: 'block',
        content: '(paragraph | panel | blockquote | orderedList | bulletList | rule | heading | codeBlock | mediaGroup | mediaSingle | decisionList | taskList | table | blockCard | extension | unsupportedBlock)+',
        defining: true,
        selectable: true,
        isolating: true,
        attrs: {
            extensionType: { default: '' },
            extensionKey: { default: '' },
            parameters: { default: null },
            text: { default: null },
            layout: { default: 'default' },
        },
        parseDOM: [
            {
                context: 'bodiedExtension//',
                tag: '[data-node-type="bodied-extension"]',
                skip: true,
            },
            {
                tag: '[data-node-type="bodied-extension"]',
                getAttrs: domNode => getExtensionAttrs(domNode, allowLocalId),
            },
        ],
        toDOM(node) {
            const attrs = {
                'data-node-type': 'bodied-extension',
                'data-extension-type': node.attrs.extensionType,
                'data-extension-key': node.attrs.extensionKey,
                'data-text': node.attrs.text,
                'data-parameters': JSON.stringify(node.attrs.parameters),
                'data-layout': node.attrs.layout,
            };
            return ['div', attrs, 0];
        },
    };
    if (allowLocalId && nodeSpec.attrs) {
        nodeSpec.attrs.localId = { default: uuid.generate() };
    }
    return nodeSpec;
};
export const bodiedExtension = createBodiedExtensionNodeSpec();
export const bodiedExtensionWithLocalId = createBodiedExtensionNodeSpec(true);
//# sourceMappingURL=bodied-extension.js.map