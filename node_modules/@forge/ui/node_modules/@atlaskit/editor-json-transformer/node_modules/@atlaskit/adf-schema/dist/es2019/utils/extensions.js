import { uuid } from './uuid';
export const isValidLayout = (name) => {
    return !!name && ['default', 'wide', 'full-width'].includes(name);
};
export const getExtensionAttrs = (dom, allowLocalId, isInline = false) => {
    const extensionType = dom.getAttribute('data-extension-type');
    const extensionKey = dom.getAttribute('data-extension-key');
    if (!extensionType || !extensionKey) {
        return false;
    }
    const attrs = {
        extensionType,
        extensionKey,
        text: dom.getAttribute('data-text') || undefined,
        parameters: JSON.parse(dom.getAttribute('data-parameters') || '{}'),
    };
    if (!isInline) {
        const rawLayout = dom.getAttribute('data-layout');
        attrs.layout = isValidLayout(rawLayout) ? rawLayout : 'default';
    }
    if (allowLocalId) {
        attrs.localId = uuid.generate();
    }
    return attrs;
};
//# sourceMappingURL=extensions.js.map