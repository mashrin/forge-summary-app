import { getExtensionAttrs } from '../../utils/extensions';
var createExtensionNodeSpec = function (allowLocalId) {
    if (allowLocalId === void 0) { allowLocalId = false; }
    var nodeSpec = {
        inline: false,
        group: 'block',
        atom: true,
        selectable: true,
        attrs: {
            extensionType: { default: '' },
            extensionKey: { default: '' },
            parameters: { default: null },
            text: { default: null },
            layout: { default: 'default' },
        },
        parseDOM: [
            {
                tag: '[data-node-type="extension"]',
                getAttrs: function (domNode) {
                    return getExtensionAttrs(domNode, allowLocalId);
                },
            },
        ],
        toDOM: function (node) {
            var attrs = {
                'data-node-type': 'extension',
                'data-extension-type': node.attrs.extensionType,
                'data-extension-key': node.attrs.extensionKey,
                'data-text': node.attrs.text,
                'data-parameters': JSON.stringify(node.attrs.parameters),
                'data-layout': node.attrs.layout,
            };
            return ['div', attrs];
        },
    };
    if (allowLocalId && nodeSpec.attrs) {
        nodeSpec.attrs.localId = { default: '' };
    }
    return nodeSpec;
};
export var extension = createExtensionNodeSpec();
export var extensionWithLocalId = createExtensionNodeSpec(true);
//# sourceMappingURL=extension.js.map