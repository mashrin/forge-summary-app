// pragma
function createElement(type, props, ...children) {
    return {
        type,
        key: null,
        props: {
            ...props,
            children: children.reduce((flattened, child) => {
                if (child) {
                    return flattened.concat(child);
                }
                return flattened;
            }, []),
        },
    };
}
export { render } from './backend-runtime';
export { useAction } from './hooks/useAction';
export { useState } from './hooks/useState';
export { useProductContext } from './hooks/useProductContext';
export { useConfig } from './hooks/useConfig';
export * from './components';
export default { createElement };
